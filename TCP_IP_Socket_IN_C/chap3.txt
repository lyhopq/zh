
+ 名字和地址族 +[chap3]

到现在我们已经知道足够的关于建立工作的TCP客户端和服务器。然而，到现在我们的例子，虽然足够有用，不过还有数个特性我们可以改进。首先，//设定目的地的唯一方式是使用IP地址//，例如：169.1.1.1或FE80:1034::2A97:1001:1。这对于大多数的人是有些痛苦的，他们——让我们面对这一点——不擅长处理像这样格式化的长数字字串。这就是为什么多数的应用程序除了使用网络地址之外允许使用名字如``www.mkp.com``和``server.example.com``来设定目的地。但是Sockets API，如我们所见到的，//仅仅//接受数值参数，因此应用程序需要一种方式来把名字转化为数值形式。

到现在我们例子的另一个问题是//选择是使用IPv4还是IPv6包装到了代码中了//——我们所见到的程序仅仅只处理一个版本的IP协议。就是这样设计的——为了保持简单。但是如果我们把这一选择在代码里隐藏，使用参数来决定是生成一个IPv4套接字还是一个IPv6套接字，是不是会更好。

原来API提供了解决这两个问题的方法——而且更多！在本章中我们将会看到如何（1）访问//名字服务//来在名字和数字量之间转换；和（2）写代码在运行期选择IPv4和IPv6。

++ 把名字映射到数字 ++[chap3_1]

鉴于端点是点号或冒号分隔数字的字符串不是用户友好型的，但这也并不是喜欢名字而不是地址的唯一原因。另一个原因是主机网络地址是它所连接的网络的一部分。这是不变性的一个根源：如果一个主机搬到了另一个网络或改变了互联网服务提供商（ISPs），它的网络地址通常不得不改变。那么无论谁通过这个地址查阅改主机不得不被通知这一变化，或者他们不能访问这一主机！当这本书写完的时候，发布本文的网站，Morgan Kaufmamm，有一个``129.35.69.7``的网络地址。然而，我们总是用``www.mkp.com``来提及改网站。显然，``www.mkp.com``比``129.35.69.7``容易记。实际上，这一点很可能是你如何认为使用名字来设定网络上的主机的。另外，如果Morgan Kaufmann的网站因为某些原因（例如：新的ISP，服务移动到了另外一台机器上）改变了它的网络地址，就能简单的把``wwww.mkp.com``的映射从``129.35.69.7``改变到一个新的网络地址来使得对所有使用名字来确定网页服务的应用程序对这一改变透明。

为了解决这些问题，Sockets API 实现大多提供了访问//名字服务//来映射名字到其它信息，包括网络地址。你已经看到了名字映射到网络地址（``www.mkp.com``）。名字服务（例如：回显）也可以被映射到端口号。映射一个名字到数字量的过程叫做//解析//。有很多方式来把名字解析到二进制量；你的系统可能提供了其中的几个。其中的某些涉及到与其它系统相互作用“在盖子之下”；其它的是严格本地的。

至关重要的是记住：**TCP/IP工作不需要名字服务**。名字仅仅提供了一种层次上的间接手段，原因是上面讨论的。主机名字服务可以从很多地方访问信息。两个主要的来源是//域名系统//（DNS）和本地配置数据库。DNS是分布式的数据库映射//域名//如：``www.mkp.com``到网络地址和其它信息；DNS协议允许主机使用TCP或UDP连接到因特网从数据库检索信息。本地配置数据库
